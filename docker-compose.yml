version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: weather_db
      POSTGRES_USER: weather_user
      POSTGRES_PASSWORD: weather_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - weather_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U weather_user -d weather_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://weather_user:weather_password@postgres:5432/weather_db
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-your_google_client_id}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-your_google_client_secret}
      SECRET_KEY: ${SECRET_KEY:-your_super_secret_key_change_in_production}
      ENVIRONMENT: development
      DEBUG: "true"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - weather_net
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-your_google_client_id}
    depends_on:
      - backend
    networks:
      - weather_net
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  weather_net:
    driver: bridge