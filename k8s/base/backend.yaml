apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: weather-app
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: weather-app-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "postgresql://weather_user:weather_password@postgres:5432/weather_db"
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: weather-app-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: weather-app-secrets
              key: google-client-secret
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: weather-app-secrets
              key: secret-key
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: ENVIRONMENT
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DEBUG
        - name: ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: ALLOWED_ORIGINS
        - name: ALGORITHM
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: ALGORITHM
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: ACCESS_TOKEN_EXPIRE_MINUTES
        - name: GOOGLE_REDIRECT_URI
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: GOOGLE_REDIRECT_URI
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: weather-app
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP